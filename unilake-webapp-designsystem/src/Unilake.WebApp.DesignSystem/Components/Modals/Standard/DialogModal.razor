@namespace Unilake.WebApp.DesignSystem.Components
@using Unilake.WebApp.DesignSystem.Components.Standard
@using Unilake.WebApp.DesignSystem.Services

<div class="p-4 max-w-md max-h-full">
    <div class="relative bg-white rounded-lg shadow">
        <Button OnClick="@Cancel" IsIcon="@true" Variant="ButtonVariant.Custom" class="absolute top-3 end-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white">
            <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
            </svg>
        </Button>
        <div class="p-5 text-center min-w-[416px] min-h-[174px]">
            <Icon IconInstance="Options.IconType" class="mx-auto mb-4 text-typography-body w-12 h-12"></Icon>
            <h3 class="mb-5 text-lg font-normal text-typography-body">@Options.MainText</h3>
            @if (!string.IsNullOrWhiteSpace(Options.OkText))
            {
                <Button OnClick="@Ok" Variant="ButtonVariant.Custom" class="text-white bg-red-600 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 dark:focus:ring-red-800 font-medium rounded-lg text-sm inline-flex items-center px-5 py-2.5 text-center">
                    @Options.OkText
                </Button>
            }
            <Button OnClick="@Cancel" Variant="ButtonVariant.Custom"
                    class="py-2.5 px-5 ms-3 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:ring-gray-100 dark:focus:ring-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700">
                @Options.CancelText
            </Button>
        </div>
    </div>
</div>

@code {
        [Inject] public required IModalService ModalService { get; init; }
        [Parameter] public required DialogOptions Options { get; init; }
        private void Cancel() =>
            ModalService.Close();
        private void Ok() =>
            ModalService.Close(ModalResult.Ok());
}