@namespace Unilake.WebApp.DesignSystem.Components
@inherits UnilakeBaseComponent

@* todo: dark mode *@
<div class="@HeaderClassName">
    <div class="@ClassNames">
        @if (HasLeftIcon)
        {
            <div class="@LeftIconClassNames">
                <Icon IconInstance="LeftIcon" Size="20" class=""></Icon>
            </div>
        }
        <div class="text-default">@NotificationText</div>
        @if (HasCloseIcon)
        {
            <Button OnClick="OnClick" Variant="ButtonVariant.Custom" class="ml-auto text-typography-icon">
                <Icon IconInstance="EnronIcons.Cross" Size="16"></Icon>
            </Button>
        }
    </div>
    @if (ChildContent != null)
    {
        <div class="@ChildContentClassNames">
            @ChildContent
        </div>
    }
</div>

@code {
    [Parameter] [EditorRequired] public required string NotificationText { get; set; }
    [Parameter] public IIcon LeftIcon { get; set; } = EnronIcons.Send;
    [Parameter] public ToastVariant Variant { get; set; } = ToastVariant.Default;
    [Parameter] public string LeftIconTextColor { get; set; } = "text-blue-600";
    [Parameter] public string LeftIconBgColor { get; set; } = "bg-brand-bravo-50";

    private string SimpleClassNames => new ClassBuilder("font-normal border-neutral-background-border-divider").ToString();
    private string DefaultClassNames => new ClassBuilder("font-normal w-full").ToString();
    private string NotificationClassNames => new ClassBuilder("font-medium").ToString();
    private string InteractiveClassNames => new ClassBuilder("font-medium").ToString();

    private bool HasLeftIcon => new[] { ToastVariant.Default, ToastVariant.Simple, ToastVariant.Interactive }.Contains(Variant);
    private bool HasCloseIcon => new[] { ToastVariant.Default, ToastVariant.Notification, ToastVariant.Interactive }.Contains(Variant);
    private bool HeaderOnly => new[] { ToastVariant.Notification, ToastVariant.Interactive }.Contains(Variant);

    private string ChildContentClassNames => new ClassBuilder("mt-4")
        .AddIf("ml-12", Variant == ToastVariant.Interactive)
        .ToString();

    private string LeftIconClassNames => new ClassBuilder("p-2 mr-4")
        .AddIf(LeftIconTextColor, !string.IsNullOrWhiteSpace(LeftIconTextColor))
        .AddIf("rounded-lg", !string.IsNullOrWhiteSpace(LeftIconBgColor))
        .AddIf(LeftIconBgColor, !string.IsNullOrWhiteSpace(LeftIconBgColor))
        .AddIf("p-2 text-blue-600 rounded-lg", new[] { ToastVariant.Default, ToastVariant.Simple, ToastVariant.Interactive }.Contains(Variant))
        .ToString();

    protected override string ClassNames => ClassBuilder
        .Add("flex items-center")
        .AddCompare(SimpleClassNames, Variant, ToastVariant.Simple)
        .AddCompare(DefaultClassNames, Variant, ToastVariant.Default)
        .AddCompare(NotificationClassNames, Variant, ToastVariant.Notification)
        .AddCompare(InteractiveClassNames, Variant, ToastVariant.Interactive)
        .ToString();

    private string HeaderClassName => new ClassBuilder("flex w-full p-4 rounded-lg shadow max-w-xs")
        .AddIf("flex-col", HeaderOnly)
        .AddIf("items-center", !HeaderOnly)
        .ToString();

    public enum ToastVariant
    {
        Simple,
        Default,
        Notification,
        Interactive
    }
}