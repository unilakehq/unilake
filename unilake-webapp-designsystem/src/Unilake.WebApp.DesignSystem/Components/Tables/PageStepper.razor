@namespace Unilake.WebApp.DesignSystem.Components
@using Microsoft.AspNetCore.Components.QuickGrid
@inherits UnilakeBaseComponent

@* todo: dark mode *@
@* todo: icons need to be improved *@
<nav aria-label="Page navigation example">
  <ul class="inline-flex -space-x-px text-sm">
    <li>
      <button @onclick="() => MoveToPage(0)"
              class="flex items-center justify-center px-3 h-8 ms-0 leading-tight text-gray-500 bg-white border border-e-0 border-gray-300 rounded-s-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white">
        <Icon IconInstance="AnronIcons.ChevronsRight"/>
      </button>
    </li>
    <li>
      <button @onclick="() => MovePage(false)"
              class="flex items-center justify-center px-3 h-8 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white">
        <Icon IconInstance="AnronIcons.ChevronLeft"/>
      </button>
    </li>
    @foreach (var item in CurrentItems)
    {
      <li>
        <button @onclick="@(() => MoveToPage(item - 1))"
                class="@GetClassNames(item - 1)">@item</button>
      </li>
    }
    <li>
      <button @onclick="() => MovePage(true)"
              class="flex items-center justify-center px-3 h-8 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white">
        <Icon IconInstance="AnronIcons.ChevronRight"/>
      </button>
    </li>
    <li>
      <button @onclick="() => MoveToPage(MaxPage)"
              class="flex items-center justify-center px-3 h-8 leading-tight text-gray-500 bg-white border border-gray-300 rounded-e-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white">
        <Icon IconInstance="AnronIcons.ChevronsRight"/>
      </button>
    </li>
  </ul>
</nav>

@code {
  [Parameter] public required PaginationState PaginationState { get; set; }

  private async Task MovePage(bool moveUp)
  {
    int nextPage = moveUp ? int.Min(PaginationState.CurrentPageIndex + 1, PaginationState.TotalItemCount ?? 0) : int.Max(PaginationState.CurrentPageIndex - 1, 0);

    if (nextPage > MaxPage)
      nextPage = MaxPage;

    await MoveToPage(nextPage);
  }

  private int MaxPage => (int)Math.Ceiling((double)(PaginationState.TotalItemCount ?? 0) / (double)PaginationState.ItemsPerPage) - 1;
  private int CurrentPage => PaginationState.CurrentPageIndex;

  private int[] CurrentItems => CurrentPage == 0 ? Enumerable.Range(1, int.Min(3, MaxPage + 1)).ToArray()
    : CurrentPage == MaxPage ? Enumerable.Range(int.Max(1, MaxPage - 1), int.Min(MaxPage + 1, 3)).ToArray()
    : Enumerable.Range(CurrentPage, int.Min(MaxPage, 3)).ToArray();

  private bool IsCurrentPage(int item) => item == CurrentPage;
  private string GetClassNames(int item) => new ClassBuilder()
    .Add("flex items-center justify-center px-3 h-8 leading-tight border border-gray-300 hover:bg-gray-100 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white")
    .AddIfElse("text-blue-600 hover:text-blue-700", IsCurrentPage(item), "text-gray-500 hover:text-gray-700 bg-white")
    .ToString();

  private async Task MoveToPage(int nextPage) => await PaginationState.SetCurrentPageIndexAsync(nextPage);
}