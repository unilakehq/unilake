@namespace Unilake.WebApp.DesignSystem.Components
@inherits UnilakeBaseComponent

<div class="@ContainerClassNames()">
    <div class="ml-6 pb-3 flex">
        <div class="@ClassNames flex gap-2.5 text-typography-body dark:text-typography-dark-body items-center align-center">
            @foreach (var item in BreadcrumbItems.Take(TakeItems))
            {
                <a href="@item.Uri" class="hover:text-typography-faded dark:hover:text-typography-dark-faded">@item.Label</a>
                <Icon IconInstance="AnronIcons.ChevronRight" Size="12"/>
            }
            @if (MaxItems > 0 && TakeItems != MaxItems)
            {
                <Icon IconInstance="AnronIcons.MoreHorizon" Size="12"/>
                <Icon IconInstance="AnronIcons.ChevronRight" Size="12"/>
            }
            <a href="@GetLastItem().Uri" class="text-typography-headline dark:text-typography-dark-headline hover:text-typography-faded dark:hover:text-typography-dark-faded">@GetLastItem().Label</a>
        </div>
        @ChildContent
    </div>
</div>


@code {
    [Parameter, EditorRequired] public required BreadcrumbItem[] BreadcrumbItems { get; set; }
    [Parameter] public int MaxItems { get; set; } = 0;
    [Parameter] public bool AccountForMenu { get; set; } = true;

    private BreadcrumbItem GetLastItem() => BreadcrumbItems.Last();
    private int TakeItems => MaxItems > 0 ? Math.Min(BreadcrumbItems.Length - 1, MaxItems) : BreadcrumbItems.Length - 1;

    private string ContainerClassNames() => new ClassBuilder("border-b-2 mb-2 border-neutral-background-border-divider dark:border-neutral-background-dark-border-divider")
        .AddIf("-ml-6", AccountForMenu)
        .ToString();
}