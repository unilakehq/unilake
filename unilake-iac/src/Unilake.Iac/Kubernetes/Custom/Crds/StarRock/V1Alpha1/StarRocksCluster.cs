// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using Pulumi;
using Unilake.Iac.Kubernetes.Custom.Crds.StarRock.V1Alpha1.Inputs;
using Unilake.Iac.Kubernetes.Custom.Crds.StarRock.V1Alpha1.Outputs;

namespace Unilake.Iac.Kubernetes.Custom.Crds.StarRock.V1Alpha1;

[CrdsResourceType("kubernetes:starrocks.com/v1alpha1:StarRocksCluster")]
public partial class StarRocksCluster : KubernetesResource
{
    [Output("apiVersion")]
    public Output<string> ApiVersion { get; private set; } = null!;

    [Output("kind")]
    public Output<string> Kind { get; private set; } = null!;

    [Output("metadata")]
    public Output<Pulumi.Kubernetes.Types.Outputs.Meta.V1.ObjectMeta> Metadata { get; private set; } = null!;

    [Output("spec")]
    public Output<StarRocksClusterSpec> Spec { get; private set; } = null!;

    [Output("status")]
    public Output<StarRocksClusterStatus> Status { get; private set; } = null!;


    /// <summary>
    /// Create a StarRocksCluster resource with the given unique name, arguments, and options.
    /// </summary>
    ///
    /// <param name="name">The unique name of the resource</param>
    /// <param name="args">The arguments used to populate this resource's properties</param>
    /// <param name="options">A bag of options that control this resource's behavior</param>
    public StarRocksCluster(string name, StarRocksClusterArgs? args = null, CustomResourceOptions? options = null)
        : base("kubernetes:starrocks.com/v1alpha1:StarRocksCluster", name, MakeArgs(args), MakeResourceOptions(options, ""))
    {
    }
    internal StarRocksCluster(string name, ImmutableDictionary<string, object?> dictionary, CustomResourceOptions? options = null)
        : base("kubernetes:starrocks.com/v1alpha1:StarRocksCluster", name, new DictionaryResourceArgs(dictionary), MakeResourceOptions(options, ""))
    {
    }

    private StarRocksCluster(string name, Input<string> id, CustomResourceOptions? options = null)
        : base("kubernetes:starrocks.com/v1alpha1:StarRocksCluster", name, null, MakeResourceOptions(options, id))
    {
    }

    private static StarRocksClusterArgs? MakeArgs(StarRocksClusterArgs? args)
    {
        args ??= new StarRocksClusterArgs();
        args.ApiVersion = "starrocks.com/v1alpha1";
        args.Kind = "StarRocksCluster";
        return args;
    }

    private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
    {
        var defaultOptions = new CustomResourceOptions
        {
            Version = Utilities.Version,
        };
        var merged = CustomResourceOptions.Merge(defaultOptions, options);
        // Override the ID if one was specified for consistency with other language SDKs.
        merged.Id = id ?? merged.Id;
        return merged;
    }
    /// <summary>
    /// Get an existing StarRocksCluster resource's state with the given name, ID, and optional extra
    /// properties used to qualify the lookup.
    /// </summary>
    ///
    /// <param name="name">The unique name of the resulting resource.</param>
    /// <param name="id">The unique provider ID of the resource to lookup.</param>
    /// <param name="options">A bag of options that control this resource's behavior</param>
    public static StarRocksCluster Get(string name, Input<string> id, CustomResourceOptions? options = null)
    {
        return new StarRocksCluster(name, id, options);
    }
}

public class StarRocksClusterArgs : global::Pulumi.ResourceArgs
{
    [Input("apiVersion")]
    public Input<string>? ApiVersion { get; set; }

    [Input("kind")]
    public Input<string>? Kind { get; set; }

    [Input("metadata")]
    public Input<Pulumi.Kubernetes.Types.Inputs.Meta.V1.ObjectMetaArgs>? Metadata { get; set; }

    [Input("spec")]
    public Input<StarRocksClusterSpecArgs>? Spec { get; set; }

    [Input("status")]
    public Input<StarRocksClusterStatusArgs>? Status { get; set; }

    public StarRocksClusterArgs()
    {
    }
    public static new StarRocksClusterArgs Empty => new StarRocksClusterArgs();
}